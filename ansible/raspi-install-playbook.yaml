

- name: Install minimal requirements for Ansible and disable root password asking
  hosts: alykoti_server
  become: true
  gather_facts: no
  tasks:
    - name: Allow sudo without password asking (to make things easier for Ansible)..
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
    - name: Install some useful stuff
      raw: apt-get -y install python python3 python3-pip python3-setuptools acl unzip postgresql-client

- name: Set timezone and configure unattended upgrades (and update/upgrade system)
  hosts: alykoti_server
  become: true
  vars_files:
    - vars/main.yaml
  roles:
    - jnv.unattended-upgrades
  tasks:
    - name: Set timezone
      community.general.timezone:
        name: "{{ timezone }}"
    - name: update and upgrade
      apt:
        upgrade: safe
        update_cache: yes
        cache_valid_time: 3600
    - name: Reboot
      shell: nohup bash -c "/bin/sleep 5 && /sbin/shutdown -r now" &
      become: true
    - name: Wait 
      wait_for_connection: timeout=300 delay=30

- name: Install smarthome-related stuff which is running locally on host
  hosts: alykoti_server
  become: true
  vars_files:
    - vars/main.yaml
  vars:
    pip_package: python3-pip
    pip_install_packages:
      - name: docker
      - name: docker-compose
    docker_users:
      - "{{ ansible_ssh_user }}"
    docker_install_compose: true
    docker_install_recommends: true
    zerotier_network_id: "{{ zerotier.network_id }}"
    zerotier_api_accesstoken: "{{ zerotier.token }}"

  roles:
    # this role installs m3nu.ansible_role_borgbackup but also inits backup etc
    - role: smarthome-borgbackup
    - { role: install-edgetpu, 
      when: frigate.edgetpu=='pci' }
    - geerlingguy.pip
    - geerlingguy.docker
    - { role: m4rcu5nl.zerotier-one, 
      when: components.zerotier }



  tasks:
    - name: Create datadir
      file:
        path: "{{ data_dir }}"
        state: directory
        owner: "{{ ansible_ssh_user }}"
        group: docker
        mode: ug+rw,g+s

- name: Install containers
  hosts: alykoti_server
  become: true
  vars_files:
    - vars/main.yaml
  roles:
    - docker-compose-traefik
    - docker-compose-frigate
    - docker-compose-mosquitto
    - docker-compose-postgres
    - docker-compose-zigbee2mqtt
    - docker-compose-home-assistant
    # - docker-compose-bt-mqtt-gateway
    # - docker-compose-code-server
    - docker-compose-portainer
    - docker-compose-esphome
    # - docker-compose-nodered
    # - docker-compose-homebridge
    - docker-compose-pi-hole

- name: Initial backup (or restore )and final reboot
  hosts: alykoti_server
  vars_files:
    - vars/main.yaml
  become: true
  roles:
    - { role: borgmatic-restore, 
      when: installation_type=='restore' }
  tasks:
    - name: Initial backup
      raw: borgmatic -c /etc/borgmatic/config.yaml --create --prune
      when: installation_type == "new" # lets now create new "empty" backup when restoring
    - name: Reboot
      shell: nohup bash -c "/bin/sleep 5 && /sbin/shutdown -r now" &
      become: true
    - name: Wait 
      wait_for_connection: timeout=300 delay=30
